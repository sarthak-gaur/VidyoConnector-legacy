<Window x:Class="VidyoConnector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VidyoConnector"
        xmlns:winForms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:viewModel="clr-namespace:VidyoConnector.ViewModel"
        xmlns:converters="clr-namespace:VidyoConnector.Converters"
        mc:Ignorable="d"
        Title="VidyoConnector" Height="650" Width="1100" Icon="Images/small.ico" MinHeight="650" MinWidth="750">
    <Window.DataContext>
        <viewModel:VidyoConnectorViewModel />
    </Window.DataContext>
    <Window.Resources>
        <converters:ConnectionStateToVisibilityConverter x:Key="ConnectionStateToVisibilityConverter"/>
        <converters:ConnectionStateToEnabledConverter x:Key="ConnectionStateToEnabledConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="A" Modifiers="Control" Command="{Binding CommandAbout}"/>
        <KeyBinding Key="Q" Modifiers="Control" Command="{Binding CommandQuitApplication}"/>
        <KeyBinding Key="Enter" Modifiers="Control" Command="{Binding CommandJoinLeaveCall}"/>
        <KeyBinding Key="D" Modifiers="Control" Command="{Binding CommandJoinLeaveCall}"/>
    </Window.InputBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="23*"/>
            <ColumnDefinition Width="1369*"/>
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Row="0" Grid.ColumnSpan="2" Margin="0,0,0,54">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="VidyoConnector">
                    <MenuItem Name="MenuAbout" Header="About" Command="{Binding CommandAbout}" InputGestureText="Ctrl+A"/>
                    <MenuItem Header="Exit" Command="{Binding CommandQuitApplication}" InputGestureText="Ctrl+Q"/>
                </MenuItem>
                <MenuItem Header="Conference">
                    <MenuItem Header="Connect" Command="{Binding CommandJoinLeaveCall}" InputGestureText="Ctrl+Enter">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ConnectionState}" Value="1">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ConnectionState}" Value="2">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ConnectionState}" Value="3">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="Disconnect" Command="{Binding CommandJoinLeaveCall}" InputGestureText="Ctrl+D">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ConnectionState}" Value="1">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ConnectionState}" Value="2">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ConnectionState}" Value="3">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="Debug Mode" IsCheckable="True" IsChecked="{Binding EnableDebug, Mode=TwoWay}" />
                </MenuItem>
                <MenuItem Header="Devices">
                    <MenuItem Name="MenuItemCameras" Header="Cameras" ItemsSource="{Binding LocalCameras}" >
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding DisplayName}" IsCheckable="True" IsChecked="{Binding IsStreamingVideo}" IsEnabled="{Binding CanStreamVideo}" 
                                          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CommandSelectLocalCamera}"
                                          Click="MenuItemCameras_OnClick"/>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <MenuItem Header="Microphones" ItemsSource="{Binding LocalMicrophones}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding DisplayName}" IsCheckable="True" IsChecked="{Binding IsStreamingAudio}" IsEnabled="{Binding CanStreamAudio}"
                                          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CommandSelectLocalMicrophone}"
                                          Click="MenuItemMicrophones_OnClick"/>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <MenuItem Header="Speakers" ItemsSource="{Binding LocalSpeakers}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding DisplayName}" IsCheckable="True" IsChecked="{Binding IsSelected}"
                                          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CommandSelectLocalSpeaker}"
                                          Click="MenuItemSpeakers_OnClick"/>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Content">
                    <MenuItem Name="VideoContent" Header="Video Content Share" ItemsSource="{Binding LocalCameras}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding DisplayName}" IsCheckable="True" IsChecked="{Binding IsSharingContent}" IsEnabled="{Binding CanShareContent}"
                                          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CommandShareVideoContent}"
                                          Click="MenuItemVideoContent_OnClick"/>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <MenuItem Name="AudioContent" Header="Audio Content Share" ItemsSource="{Binding LocalMicrophones}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding DisplayName}" IsCheckable="True" IsChecked="{Binding IsSharingContent}" IsEnabled="{Binding CanShareContent}"
                                          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CommandShareAudioContent}"
                                          Click="MenuItemAudioContent_OnClick"/>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Shares" >
                    <MenuItem Header="Monitors" ItemsSource="{Binding LocalMonistors}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding DisplayName}" IsCheckable="True" IsChecked="{Binding IsSelected}"
                                          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CommandStartShareMonitor}"
                                          Click="MenuItemSharesMonitors_OnClick"/>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <MenuItem Header="Windows" ItemsSource="{Binding LocalWindows}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding DisplayName}" IsCheckable="True" IsChecked="{Binding IsSelected}"
                                          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CommandStartShareWindow}"
                                          Click="MenuItemSharesWindows_OnClick"/>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                </MenuItem>
            </Menu>
            <StackPanel></StackPanel>
        </DockPanel>

        <Grid Background="WhiteSmoke" Grid.ColumnSpan="2" Margin="0,18,0,0" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Margin="10,0,20,0">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ConnectionState, Mode=TwoWay}" Value="1">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectionState}" Value="2">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectionState, Mode=TwoWay}" Value="3">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <Image Source="Images/Vidyo.io-Vertical-Dark@2x.png" RenderOptions.BitmapScalingMode="HighQuality" Margin="20,20,20,10"/>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="Margin" Value="0,5,5,5" />
                        </Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Height" Value="20" />
                        </Style>
                    </Grid.Resources>
                    
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Portal" />
                    <TextBox Grid.Row="0" Grid.Column="1" Name="Portal" Text="{Binding Portal}"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Display Name" />
                    <TextBox Grid.Row="1" Grid.Column="1" Name="Token" Text="{Binding DisplayName}"/>
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Room Key" />
                    <TextBox Grid.Row="2" Grid.Column="1" Name="DisplayName" Text="{Binding RoomKey}"/>
                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Room Pin" />
                    <TextBox Grid.Row="3" Grid.Column="1" Name="ResourceId" Text="{Binding RoomPin}"/>
                    <TextBlock Grid.Row="4" Grid.Column="1" Name="Errors" Text="{Binding Error}" Foreground="Red" FontWeight="DemiBold"/>
                </Grid>
            </StackPanel>

            <WindowsFormsHost x:Name="wfHost" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SizeChanged="FrameworkElement_OnSizeChanged">
                <winForms:Panel x:Name="VideoPanel"/>
            </WindowsFormsHost>

            <Grid x:Name="gridChat" Grid.Column="2" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ListView Name="lvChat" Width="Auto" Height="Auto" ItemsSource="{Binding ChatMessages}">
                    <ListView.View>
                        <GridView>
                            <GridView.ColumnHeaderContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="{x:Type GridViewColumnHeader}">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                            <GridViewColumn Header="User" Width="75" DisplayMemberBinding="{Binding Sender}"/>
                            <GridViewColumn Header="Message" Width="175" DisplayMemberBinding="{Binding Message}"/>
                        </GridView>
                    </ListView.View>
                </ListView>

                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="30">
                    <TextBox x:Name="tbMessage" Margin="5,5,5,5" Width="215" Text="{Binding ChatMessage}"/>
                    <Button x:Name="btnSendChatMessage" Width="Auto" Content="Send" Margin="0,5,5,5" Command="{Binding CommandSendChatMessage}">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Images/sendChat.png"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>

        <DockPanel Grid.Row="2" HorizontalAlignment="Stretch" Background="Black" VerticalAlignment="Center" Grid.ColumnSpan="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="{Binding ParticipantsActivityLog}" Foreground="White" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="20,0,0,0"/>

                <StackPanel Grid.Column="1" Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" >
                    <Button Name="StopSharing" Margin="0,15,60,15" Command="{Binding CommandStopSharing}" ToolTip="Stop sharing">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SharingInProgress, Mode=TwoWay}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SharingInProgress, Mode=TwoWay}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Images/stopsharingTransparent.png" />
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Name="BtnCamera" Margin="0,15,50,15" Visibility="{Binding ConnectionState, Converter={StaticResource ConnectionStateToVisibilityConverter}}"
                            Command="{Binding CommandSetLocalCameraPrivacy}" ToolTip="Mute / Unmute camera">
                        <Button.Template>
                            <ControlTemplate>
                                <Image>
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCameraOn, Mode=TwoWay}" Value="True">
                                                    <Setter Property="Source" Value="Images/cameraOnBlackBground.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsCameraOn, Mode=TwoWay}" Value="False">
                                                    <Setter Property="Source" Value="Images/cameraOffBlackBground.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Name="BtnConference" Margin="10,15,10,15" Command="{Binding CommandJoinLeaveCall}" ToolTip="Join / Leave call">
                        <Button.Template>
                            <ControlTemplate>
                                <Image>
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ConnectionState, Mode=TwoWay}" Value="2">
                                                    <Setter Property="Source" Value="Images/callEndBlackBground.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ConnectionState, Mode=TwoWay}" Value="3">
                                                    <Setter Property="Source" Value="Images/callStartBlackBground.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ConnectionState, Mode=TwoWay}" Value="0">
                                                    <Setter Property="Source" Value="Images/callEndBlackBground.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ConnectionState, Mode=TwoWay}" Value="1">
                                                    <Setter Property="Source" Value="Images/callEndBlackBground.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Name="BtnMicrophone" Margin="50,15,0,15" Visibility="{Binding ConnectionState, Converter={StaticResource ConnectionStateToVisibilityConverter}}"
                            Command="{Binding CommandSetLocalMicrophonePrivacy}" ToolTip="Mute / Unmute microphone">
                        <Button.Template>
                            <ControlTemplate>
                                <Image>
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMicrophoneOn, Mode=TwoWay}" Value="True">
                                                    <Setter Property="Source" Value="Images/microphoneOnBlackBground.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsMicrophoneOn, Mode=TwoWay}" Value="False">
                                                    <Setter Property="Source" Value="Images/microphoneOffBlackBground.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Name="BtnChat" Margin="50,15,0,15" ToolTip="Chat" Click="BtnChat_Click" IsEnabled="{Binding ConnectionState, Converter={StaticResource ConnectionStateToEnabledConverter}}">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Images/chat.png"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>

                <TextBlock Grid.Column="2" Text="{Binding Status}" Foreground="White" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="0,0,20,0"/>

            </Grid>
        </DockPanel>
    </Grid>
</Window>
